#! /usr/bin/env zsh
# shellcheck disable=all  # This is a zsh script, not bash

function link_config() {
    local config_dir="$1"

    # If no directory is provided, show usage
    if [[ -z "$config_dir" ]]; then
        echo "Usage: link_config [--all | <config_directory>]"
        return 1
    fi

    # Handle --all option
    if [[ "$config_dir" = "--all" ]]; then
        local dotfiles_config_dir="$HOME/.dotfiles/config"

        # Check if the config directory exists
        if [[ ! -d "$dotfiles_config_dir" ]]; then
            echo "Error: Config directory $dotfiles_config_dir does not exist"
            return 1
        fi

        # Iterate through all subdirectories in the config folder
        for dir in "$dotfiles_config_dir"/*(/); do
            echo "Linking config: ${dir:t}"
            link_config "${dir:t}"
        done
        return 0
    fi

    # Original link_config functionality for single directory
    local source_dir="$HOME/.dotfiles/config/$config_dir"
    local target_dir="$HOME/.config/$config_dir"

    # Check if source directory exists
    if [[ ! -d "$source_dir" ]]; then
        echo "Error: Source directory $source_dir does not exist"
        return 1
    fi

    # Create target directory if it doesn't exist
    mkdir -p "$target_dir"

    # Check if there are any files to link (using zsh globbing, including dotfiles)
    local files=("$source_dir"/*(DN.))
    if (( ${#files} == 0 )); then
        echo "Warning: No files found in $source_dir"
        return 0
    fi

    # Create symbolic links with sudo if needed
    for src in $files; do
        local target="$target_dir/${src:t}"
        if ! ln -sf "$src" "$target" 2>/dev/null; then
            echo "Warning: Failed to create symlink for ${src:t}, trying with sudo..."
            sudo ln -sf "$src" "$target"
        fi
    done

    echo "Config linked: $config_dir"
}

link_config "$1"
