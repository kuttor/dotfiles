#! /usr/bin/env zsh

verify() {
    emulate -L zsh
    local cmd output_flag alias_flag alias_name
    zparseopts -D -E -- o=output_flag -output=output_flag a=alias_flag -alias=alias_flag

    cmd=$1
    alias_name=$2

    [[ -z "$cmd" ]] && { echo "Usage: verify [--output|-o] [--alias|-a alias_name] command" >&2; return 1; }

    # First check if command exists at all
    if ! command -v "$cmd" &>/dev/null; then
        [[ -n "$output_flag" ]] && echo "'$cmd' not found" >&2
        return 1
    fi

    # Get command info
    local cmd_info=$(type "$cmd" 2>/dev/null)
    if [[ $? -ne 0 ]]; then
        [[ -n "$output_flag" ]] && echo "Could not determine type of '$cmd'" >&2
        return 1
    fi

    # Handle alias creation if --alias flag is present
    if [[ -n "$alias_flag" && -n "$alias_name" ]]; then
        local cmd_path=$(command -v "$cmd")
        alias "$alias_name"="$cmd_path"
        [[ -n "$output_flag" ]] && echo "Created alias '$alias_name' for '$cmd_path'"
        return 0
    fi

    # If no output flag, just return the path
    if [[ -z "$output_flag" ]]; then
        command -v "$cmd"
        return 0
    fi

    # Detailed output with --output flag
    if [[ "$cmd_info" == *" is an alias "* ]]; then
        echo "'$cmd' is an alias:"
        alias "$cmd" | sed 's/^alias //'
    elif [[ "$cmd_info" == *" is a shell function"* ]]; then
        echo "'$cmd' is a function"
    elif [[ "$cmd_info" == *" is a shell builtin"* ]]; then
        echo "'$cmd' is a shell builtin"
    elif [[ "$cmd_info" == *" is "* ]]; then
        echo "'$cmd' is a program at $(command -v "$cmd")"
    else
        echo "Could not determine type of '$cmd'"
        return 1
    fi

    # Check if only the command argument is passed
    if [[ -z "$output_flag" && -z "$alias_flag" ]]; then
        if command -v "$cmd" &>/dev/null; then
            echo true
        else
            echo false
        fi
        return 0
    fi

    return 0
}

