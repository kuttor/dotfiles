#!/bin/zsh

function err_echo {
  >&2 echo "$1"
}

help() {
   # Display Help
   echo "Switch - Recursive find/replacen                 "
   echo
   echo "Syntax:                                          "
   echo "    switch [-h]                                  "
   echo "    switch <oldstring> <newstring> <file-pattern>"
   echo "options:                                         "
   echo "    -h     Print Help Page.                      "
   echo "usage:                                           "
   echo "    switch old new foo.txt                       "
   echo "    switch old new foo.txt *.html                "
   echo "    switch old new **\*.txt                      "
}

# Get the options
while getopts ":h" option; do
   case $option in
      h) # display Help
         help
         exit;;
     \?) # incorrect option
         echo "Error: Invalid option"
         exit;;
   esac
done


function usage {
  err_echo "Usage: Switch"
  err_echo '  switch old new foo.txt'
  err_echo '  switch old new foo.txt *.html'
  err_echo '  switch old new **\*.txt'
  exit 1
}

[ $# -eq 0 ] && err_echo "No args given" && usage

old_val=$1
shift
new_val=$1
shift
files=$* # the rest of the arguments

[ -z "$old_val" ]  && err_echo "No old value given" && usage
[ -z "$new_val" ]  && err_echo "No new value given" && usage
[ -z "$files" ]    && err_echo "No filenames given" && usage

for file in $files; do
  sed -i '' -e "s/$old_val/$new_val/g" $file
done
