rm -rf "1"
git add "Bunch of formating styling stuff, lsd"
git add * ; git commit -am "Bunch of formating styling stuff, lsd"
git diff
ghit push --all
git push --all
git config --global
git config --global pull.ff only\

git push
git pull]
git pull --force
git pull
git log]
git logs
git log\ 
git log
git show
git push --verify --verbose
git push --force origin master
man grep
man grep | fzf-preview
cd ~/.dotfiles/fonts
\: | rg_prefix='rg --column --line-number --no-heading --color=always --smart-case' fzf --bind 'start:reload:$rg_prefix ""' --bind 'change:reload:$rg_prefix {q} || true' --bind 'enter:become(vim {1} +{2})' --ansi --disabled --height=50% --layout=reverse
zinit update
whois https://svldm.expertlyspoken.co.uk
whois ANY https://svldm.expertlyspoken.co.uk
WJHOIS ALL svldm.expertlyspoken.co.uk
WHOIS ALL svldm.expertlyspoken.co.uk
whois webcam-record.com
dig any webcam-record.com
traceroute webcam-record.com
route webcam-record.com
la -l
L
l
lsd Applications/Chrome\ Apps.localized
lsd | ftb-tmux-popup
PREVIEW_SNIPPET() {\
 local RPATH=$(realpath $1)\
 [[ -d $RPATH ]] && lsd -1 --color="always" $RPATH;\
 [[ -f $RPATH ]] && bat -pp --color="always" --line-range :30 $RPATH lsd | ftb-tmux-popup exit;\
}
lsd sd/
lsd | fzf-preview]
lsd | fzf-preview
ls | fzf
lsd | fzf
tmux popup -xC -yC -wH -hH -R 'man man' -K -E
tmux
whereis tmux
/Users/akuttor/.local/share/zinit/polaris/bin/tmux
rm -rf .l/s/
rm -rf .local/share/zinit/plugins/tmux---tmux
eza -1 --color=always $realpath
lsd --help
]]wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwu
/opt/homebrew/bin/eza -1 --color="always" $(realpath)
\:q
/opt/homebrew/bin/eza -1 --help
EZA_DEFAULT_FLAGS=\\
--all --group-directories-first --time-style=long-iso --sort=name --icons=always
path_list
typeset -U path PATH
path_list | sort
vim .dotfiles/configs/shellcheckrc
which ls
rm -rf .local/share/zinit/
whereis eza
cd .dotfiles/
git | fzf-preview-command-git_commit
ls | fzf-tab-complete
c;lear
Â¬
grep python .dotfiles/
grep python .dotfiles/*\\
grep python .dotfiles/
grep python .dotfiles/*
grep -r python .dotfiles/*
.dotfiles/configs//zsh/.zprofile:export PYTHONSTARTUP="${CONFIGS}/python/.python_startup.py" && mkdir -p "${CONFIGS}/python"\

PYTHONSTARTUP="${CONFIGS}/python/.python_startup.py" && mkdir -p "${CONFIGS}/python"\

brew install coreutils
rm -rf .local/cache/zsh-startify
rm -rf .local/cache/zinit
rm -rf .local/cache/zcompdump
rm -rf .local/cache/trunk
brew uninstall trunmk
brew uninstall treunk
brew uninstall trunk
rm -rf .local/cache/zi
rm -rf .local/share/zinit
ls | ftb-tmux-popup\

build-fzf-tab-module, then
ls -ol
grep python /var/log/system.log
vim /Users/akuttor/.dotfiles/configs/zsh/.zshrc +92
lsd -1 --color="always" $(realpath)
vim | fzf-preview
vim | fzf-preview | .d/
code .
echo $nvim_configs
echo $nvim_config
grep NVIM configs/zsh/*
rg NVIM configs/zsh/*
zinit report
echo $ZENO_HOM
echo $ZENO_HOME
vim .dotfiles/configs/zeno
vim .dotfiles/configs/zeno/config.yml
vim .dotfiles/configs/zeno/zeno
antidiot
antidot
antidot completion
antidot clean
antidot --help
zstyle ':fzf-tab:*' continuous-trigger '/'
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath' \

eza
cd zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'\
export LESSOPEN='|~/.lessfilter %s'
zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'\
export LESSOPEN='|~/.lessfilter %s'
\
zstyle ':fzf-tab:complete:git-(add|diff|restore):*' fzf-preview 'git diff $word | delta'\
zstyle ':fzf-tab:complete:git-log:*' fzf-preview 'git log --color=always $word'\
zstyle ':fzf-tab:complete:git-help:*' fzf-preview 'git help $word | bat -plman --color=always'\
zstyle ':fzf-tab:complete:git-show:*' fzf-preview 'case "$group" in\
	"commit tag") git show --color=always $word ;;\
	*) git show --color=always $word | delta ;;\
	esac'\
zstyle ':fzf-tab:complete:git-checkout:*' fzf-preview 'case "$group" in\
	"modified file") git diff $word | delta ;;\
	"recent commit object name") git show --color=always $word | delta ;;\
	*) git log --color=always $word ;;\
	esac'
zinit bindkeys
\
eval "$(fzf --zsh)"
vim $(fzf --height 40%)
echo $fzf_default_completion
zinit delete decayofmind/zsh-fast-alias-tips
ls ~~
cd zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'\
export LESSOPEN='|~/.lessfilter %s'\ 
lslllll
LS -L
ls -o
bindkey
bindkey | sort
cat
brew search showkey
brew install showkey
showkey -a
showkey --help
ll /Users/akuttor/.local/share/zinit/plugins/decayofmind---zsh-fast-alias-tips/zsh-alias-matcher
ll /Users/akuttor/.local/share/zinit/plugins/decayofmind---zsh-fast-alias-tips
ll /Users/akuttor/.local/share/zinit/
ll /Users/akuttor/.local/share/zinit/plugins
brew search xbindkey
echo $GIT_CONFIG
cat $GIT_CONFIG
bat $GIT_CONFIG
git config --list
brew install gpg
gpg --full-generate-key
ll .gnupg/public-keys.d
ll .gnupg/public-keys.d/pubring.db
gpg --list-secret-keys --keyid-format=long\

gpg --armor --export 33822D58DC0F0DC4C6E4BA5306E3F7DE57882FE2
gpg --armor --export 33822D58DC0F0DC4C6E4BA5306E3F7DE57882FE2 | pbcopy
vim .dotfiles/configs/zsh/aliases.zsh
git config --global --unset gpg.format\

gpg --list-secret-keys --keyid-format=long
vim ~/.dotfiles/configs/zsh/.zprofile
gpg --homedir $LOCAL_CONFIG/.gnupg
ls -l .config
rm -rf ~/.gnupg
rm -rf ~/.gnup
nvim
bluetoothd --help
man 1 bluetoothuserd
bluetool --help
bluetoothctl
brew install bluetoothctl
BluetoothConnector --help
brew search bluetooth
brew info blueutility
brew info bluetility
brew install bluetility
vim
system_profiler SPBluetoothDataType\
\
sudo sed -i "" "/nix/d" /etc/synthetic.conf\

zi --help
zinit self-update
zi update
C-ls -l
\:q!
lsa -l
ALIASES
aliaSEWSA
aliases
alias
kill -9 **<TAB>\
\
ssh **<TAB>\
telnet **<TAB>\
\
unset **<TAB>\
export **<TAB>\
unalias **<TAB>\ 
kill -9 **<TAB>\
\
ssh **<TAB>\
telnet **<TAB>\
\
unset **<TAB>\
export **<TAB>\
unalias **<TAB>
kill -9 **<tab>
<tqb>
wef
fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'\

fzf --preview bat--style=numbers --color=always --line-range :500 {}'`
fzf --preview 'bat --style=numbers --color=always --line-range :500 {}'
_fzf_comprun() {\
 local command=$1\
 shift\
\
 case "$command" in\
 cd) fzf "$@" --preview 'tree -C {} | head -200' ;;\
 *) fzf "$@" ;;\
 esac\
}
tree
vim .dotfiles/functions/_fzf_comprun
tre --help
_fzf_complete_awk_functions=\\

fzf "$@" --preview 'tree -C {} | head -200'
vim .dotfiles/configs/fzf.zsh
ls -lah
'`Ã§Âƒ€`'
Ã§
date
clear
brew install gawk grep gnu-sed coreutils
zinit completions zoxide
cd .local/share/zinit/plugins/ajeetdsouza---zoxide
ls -l
ls -l completions
cd completions
ll
bat README.md
keys=(\
 ctrl-r:'repeat-fzf-completion'\
 right:accept:'repeat-fzf-completion'\
 alt-enter:accept:'zle accept-line'\
)
z d
touch configs/fzf-preview.zsh
echo $FZF_CONFIG_PATH]
echo $FZF_CONFIG_PATH
alias l;sd
lsd[]
lsd
alias lsd
LSD
alias ls
whereis ls
alias grep
rg gfind .dotfiles/*
vim .dotfiles/functions/find
mv .dotfiles/functions/find .dotfiles/functions/gfind
cd adsvfnsD:LKJnv;lsaDK`
ls
ls Applications
2to3-3.9
ls Movies
.keepme
zeno-server
\
zstyle ':completion:*:git-checkout:*' sort false\
#\
#\
zstyle ':completion:*:descriptions' format '[%d]'\
#\
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}\
#\
zstyle ':completion:*' menu no\
#\
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'\
#\
zstyle ':fzf-tab:*' switch-group '<' '>'`\
'\'\
``"\
`
\
zstyle ':completion:*:git-checkout:*' sort false\
#\
#\
zstyle ':completion:*:descriptions' format '[%d]'\
#\
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}\
#\
zstyle ':completion:*' menu no\
#\
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'\
#\
zstyle ':fzf-tab:*' switch-group '<' '>'
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup\

ls Desktop
z Applications
`ls | ftb-tmux-popup\
`
ls | ftb-tmux-popup
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath' # remember to use single quote here!!!
enable-fzf-tab
2to3-3.11
``cd Chrome\ Apps.localized
cd Google\ Maps.app
c d
cd Applications
cd
ll Applications
cd .dotfiles
git config --global user.name "Andrew Kuttor"
git config user.name "Andrew Kuttor"
git config --global user.email "andrew.kuttor@gmail.com"
git config user.email "andrew.kuttor@gmail.com"
git status
git ignore configs/zsh/.zsh_history\\
git ignore .gitignore
git check-ignore
git check-ignore -h
gitignore]
exiot
exit
cd .dotfiles
ls
ls -l
git stATUS
git status
git add configs/eza.conf configs/zsh/.zshrc configs/zsh/completions.zsh hooks/fzf-tab.atload.zsh hooks/fzf-widgets.atinit.zsh hooks/l.fzftab.zsh hooks/lsd.atload.zsh
git add configs/eza.conf configs/zsh/.zshrc configs/zsh/completions.zsh hooks/fzf-tab.atload.zsh hooks/fzf-widgets.atinit.zsh hooks/fzf- hooks/lsd.atload.zsh
git add configs/eza.conf configs/zsh/.zshrc configs/zsh/completions.zsh hooks/fzf-tab.atload.zsh hooks/fzf-widgets.atinit.zsh hooks/lsd.atload.zsh
git rm configs/fzf.zsh
git add configs/git/*
git add configs/zeno/* configs/zsh/.zprofile configs/zsh/.zshrc configs/zsh/aliases.zsh configs/zsh/keybindings.zsh functions/_fzf_comprun functions/find hooks/fzf-tab.atload.zsh hooks/fzf-preview.atload.zsh
git commit -am "Lotds of changes with fzf"
/Users/andrew.kuttor/.dotfiles/configs/zsh/.zshrc +15
/usr/bin/vim  /Users/andrew.kuttor/.dotfiles/configs/zsh/.zshrc +15
ls .local/share/zinit/zinit.git

ls -l
alias ls
lsd
lsd
ls -l
lsd -l
rm -rf traceroute
ls -l
rm -rf zinit
clear
ls -lah
brew search antidot
brew install antidote
ls -l
lsd
lsd -lah
brew install neovim 
ls -l
clear
cd ~/.dotfiles
git pull
cat configs/zsh/.zprofile
code configs/zsh/.zprofile
exit
brew install jq
zinit self-update
zinit update
python vim ~/.dotfiles/configs/zsh/aliases.zsh
vim ~/.dotfiles/configs/zsh/aliases.zsh
brew install python 
brew install tree
rm -rf ~/.local/share/zinit
ls -lah .local/cache/zsh/cache/
ls -lah .local/cache/zsh/
ls -lah .local/cache/zsh/cache/
vim ~/.dotfiles/configs/zsh/.zprofile
vim ~/.dotfiles/configs/zsh/.zprofile
brew install doron-cohen/tap/antidot
ls -l
antidot --help
antidot completion 
antidot completion zsh
antidot completion zsh > /opt/homebrew/share/zsh/site-functions/_antidot
ls 0-lk
ls -l
antidot --help
antidot init
echo XDG_CONFIG_HOME
echo $XDG_CONFIG_HOME
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-/Users/andrew.kuttor/Library/Application Support}"\
export XDG_CACHE_HOME="${XDG_CACHE_HOME:-/Users/andrew.kuttor/Library/Caches}"\
export XDG_DATA_HOME="${XDG_DATA_HOME:-/Users/andrew.kuttor/Library/Application Support}"\
\
if [ -f "/Users/andrew.kuttor/Library/Application Support/antidot/env.sh" ]; then source "/Users/andrew.kuttor/Library/Application Support/antidot/env.sh"; fi\
if [ -f "/Users/andrew.kuttor/Library/Application Support/antidot/alias.sh" ]; then source "/Users/andrew.kuttor/Library/Application Support/antidot/alias.sh"; fi\

echo $XDG_CONFIG_HOME
antidot --help
antidot update
antidot clea
antidot clean
eval "$(antidot init)"
ls -lah
rm -rf .gem
ls -lah
path_list 
vim ~/.dotfiles/configs/zsh/.zprofile
cat .dotfiles/configs/zsh/paths.zsh
source .dotfiles/configs/zsh/paths.zsh
ls -l
source .dotfiles/configs/zsh/aliases.zsh
path_list
path_list | sort
brew search completions
brew install zsh-completions
nvim 
pip install neovim
nvim
touch .config/nvim/init.vim
mkdir -p .config/nvim
touch .config/nvim/init.vim
vim .config/nvim/init.vim
nvim
vim .config/nvim/init.lua
vim .config/nvim/init.vim
nvim
rm -rf ~/.config/nvim/init.vim
nvim
vim .config/nvim/init.lua
nvim
brew install lazygit
y
ls -l .dotfiles/hooks
ls -l .dotfiles/functions
autoload -Uz ~/.dotfiles/functions/hook
hook 
ls -l
lsd
cat ~/.dotfiles/configs/zsh/autoloads.zsh
bt
bat
cat ~/.dotfiles/configs/zsh/paths.zsh
cat ~/.dotfiles/configs/zsh/autoloads.zsh
cd .dotfiles
code . 
ls -l
code . 
# Load autoloaded Functions\
() {\
    local FUNCS="${HOME}/.dotfiles/functions"\
\
    # Prevent duplicates\
    typeset -TUg +x FPATH=$FUNCS:$FPATH fpath\
    [[ -d $FUNCS ]] && for i in $FUNCS/*(:t); autoload -U $i\
\
    # Now autoload them\
    # if [[ -d $funcs ]]; then\
    #     autoload ${=$(cd "$funcs" && echo *)}\
    # fi\
    \
    #[[ -d $FUNCS ]] && for i in $FUNCS/*(:t); autoload -U $i;\
\
}
# Load autoloaded Functions\
() {\
    local FUNCS="${HOME}/.dotfiles/functions"\
\
    typeset -TUg +x FPATH=$FUNCS:$FPATH fpath\
    [[ -d $FUNCS ]] && for i in $FUNCS/*(:t); autoload -U $i\
}
() {\
    local FUNCS="${HOME}/.dotfiles/functions"\
\
    typeset -TUg +x FPATH=$FUNCS:$FPATH fpath\
    [[ -d $FUNCS ]] && for i in $FUNCS/*(:t); autoload -U $i\
}
u
cd .dotfiles
zinit self-update
zinit update
ls -l
ls -l
clear
ls -l
brew install zsh 
: 1714627456:0;ls -l
: 1714627462:0;/bin/ls -l
: 1714627472:0;git add configs/
: 1714627475:0;git add configs/*
: 1714627479:0;git status
: 1714627511:0;git commit -am "The light... I can see it... its there.... very small though. "
